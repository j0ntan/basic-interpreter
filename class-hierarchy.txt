Interpreter
    vector<Command>
    vector<NumExp::Var*>
    GoSubStack
===

Command
    line_num (int)

Command::Print
    NumExp

Command::AssignVar
    Var*
    NumExp

Command::AssignArrayVar
    Var[NumExp]
    NumExp

Command::Goto
    line_num (jumpto)

Command::IfThen
    BoolExp
    line_num (jumpto)

Command::GoSub
    line_num (jumpto)

[Command::Return]

[Command::End]
===

BoolExp
    NumExp
    NumExp

BoolExp::GT

BoolExp::LT

BoolExp::Eq
===

NumExp

NumExp::BinaryExp
    NumExp
    NumExp

BinaryExp::Addition

BinaryExp::Subtraction

BinaryExp::Multiplication

BinaryExp::Division

NumExp::Var
    name (string)
    NumExp::Constant

NumExp::Constant
    value (int)
